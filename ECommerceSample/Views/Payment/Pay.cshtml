@using ECommerce.Entity
@model Invoice

@{
    ViewBag.Title = "Pay";
    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_AuthenticatedLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutPage1.cshtml";
    }
}

<h2>Pay</h2>

@using (Html.BeginForm())
{
    <fieldset>
        <legend>Invoice</legend>
        @*<div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(m => m.Member.FirstName, "First Name:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Member.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Order.Member.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Member.LastName, "Last Name:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Member.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Order.Member.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Member.Email, "E-mail Address", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Member.Email, new { @class = "form-control" })
                    <span>
                        @Html.ValidationMessageFor(m => m.Member.Email, "", new { @class = "text-danger" })
                    </span>

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Payment, "Payment Type:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PaymentTypes", ViewBag.Skills as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PaymentTypeID, "", new { @class = "" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Member.Phone, "Phone :", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Member.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Member.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Member.Address, "Address :", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Member.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Member.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="submit" value="Pay" class="btn btn-success col-md-offset-2" />
        </div>*@
    </fieldset>
}
